plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT' apply false
    id 'maven-publish'
}

group = project.maven_group

allprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    archivesBaseName = project.name
    version = project.mod_version

    dependencies {
        minecraft "com.mojang:minecraft:$minecraft_version"
        mappings "net.fabricmc:yarn:$yarn_mappings:v2"
        modImplementation "net.fabricmc:fabric-loader:$loader_version"
        modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    }

    processResources {
        inputs.property "version", project.version

        from(sourceSets.main.resources.srcDirs) {
            include "fabric.mod.json"
            expand "version": project.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude "fabric.mod.json"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    jar {
        from "LICENSE"
    }
}

subprojects {
    group = "${project.maven_group}.${project.archives_base_name}"
}

dependencies {
    afterEvaluate {
        subprojects.each {
            compile project(path: ":${it.name}")
            include project("${it.name}:")
        }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}